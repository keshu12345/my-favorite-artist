// Code generated by mockery v2.39.1. DO NOT EDIT.

package MockMyFavoriteArtistService

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	models "github.com/keshu12345/my-favorite-artist/models"
)

// MyFavoriteArtistService is an autogenerated mock type for the MyFavoriteArtistService type
type MyFavoriteArtistService struct {
	mock.Mock
}

// ArtistInfo provides a mock function with given fields: c, lastFMAPIURL
func (_m *MyFavoriteArtistService) ArtistInfo(c *gin.Context, lastFMAPIURL string) (*models.ArtistInfo, error) {
	ret := _m.Called(c, lastFMAPIURL)

	if len(ret) == 0 {
		panic("no return value specified for ArtistInfo")
	}

	var r0 *models.ArtistInfo
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context, string) (*models.ArtistInfo, error)); ok {
		return rf(c, lastFMAPIURL)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context, string) *models.ArtistInfo); ok {
		r0 = rf(c, lastFMAPIURL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ArtistInfo)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context, string) error); ok {
		r1 = rf(c, lastFMAPIURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ImageInfo provides a mock function with given fields: c, lastFMAPIURL
func (_m *MyFavoriteArtistService) ImageInfo(c *gin.Context, lastFMAPIURL string) (*models.ImageWithImageURL, error) {
	ret := _m.Called(c, lastFMAPIURL)

	if len(ret) == 0 {
		panic("no return value specified for ImageInfo")
	}

	var r0 *models.ImageWithImageURL
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context, string) (*models.ImageWithImageURL, error)); ok {
		return rf(c, lastFMAPIURL)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context, string) *models.ImageWithImageURL); ok {
		r0 = rf(c, lastFMAPIURL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ImageWithImageURL)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context, string) error); ok {
		r1 = rf(c, lastFMAPIURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TopTracks provides a mock function with given fields: c, lastFMAPIURL
func (_m *MyFavoriteArtistService) TopTracks(c *gin.Context, lastFMAPIURL string) (*models.TopTracks, error) {
	ret := _m.Called(c, lastFMAPIURL)

	if len(ret) == 0 {
		panic("no return value specified for TopTracks")
	}

	var r0 *models.TopTracks
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context, string) (*models.TopTracks, error)); ok {
		return rf(c, lastFMAPIURL)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context, string) *models.TopTracks); ok {
		r0 = rf(c, lastFMAPIURL)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.TopTracks)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context, string) error); ok {
		r1 = rf(c, lastFMAPIURL)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMyFavoriteArtistService creates a new instance of MyFavoriteArtistService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMyFavoriteArtistService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MyFavoriteArtistService {
	mock := &MyFavoriteArtistService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
