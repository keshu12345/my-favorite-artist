// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/artist-info": {
            "get": {
                "description": "Get top tracks based on specified parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetArtistInfo"
                ],
                "summary": "Show Artist info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The method parameter",
                        "name": "method",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The country parameter",
                        "name": "artist",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The API key parameter",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The format parameter",
                        "name": "format",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Return"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/image-info": {
            "get": {
                "description": "Get top tracks based on specified parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetImageInfo"
                ],
                "summary": "Show image info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The method parameter",
                        "name": "method",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The country parameter",
                        "name": "artist",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The API key parameter",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The format parameter",
                        "name": "format",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Return"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/top-tracks": {
            "get": {
                "description": "Get top tracks based on specified parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetTopTracks"
                ],
                "summary": "Show top tracks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The method parameter",
                        "name": "method",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The country parameter",
                        "name": "country",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The API key parameter",
                        "name": "api_key",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The format parameter",
                        "name": "format",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "Return"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	// LeftDelim:        "{{",
	// RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
